KAFKA_TRUSTSTORE_PATH: ""
KAFKA_CREDSTORE_PASSWORD: ""
KAFKA_SECURITY_PROTOCOL: "PLAINTEXT"
KAFKA_KEYSTORE_PATH: ""
KAFKA_AUTO_OFFSET_RESET: "earliest"
SERVICEUSER_USERNAME: "user"
SERVICEUSER_PASSWORD: "pwd"


spring:
  profiles:
    active: test
  flyway:
    enabled: true
  datasource:
    hikari:
      minimum-idle: 1
      maximum-pool-size: 3
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: PLAINTEXT
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: "sykepengesoknad-narmesteleder-varsler"
      max-poll-records: 1
      auto-offset-reset: latest
      enable-auto-commit: false

flex.fss.proxy.url: http://flex-fss-proxy

no.nav.security.jwt:
  client:
    registration:
      flex-fss-proxy-client-credentials:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azureator/token
        grant-type: client_credentials
        scope: flex-fss-proxy
        authentication:
          client-id: client-id
          client-secret: secretzz
          client-auth-method: client_secret_basic

      pdl-api-client-credentials:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azureator/token
        grant-type: client_credentials
        scope: pdl-api
        authentication:
          client-id: client-id
          client-secret: secretzz
          client-auth-method: client_secret_basic

aiven-kafka:
  auto-offset-reset: latest #TODO none
  security-protocol: SSL

PDL_BASE_URL: "https://pdl-api.dev-fss-pub.nais.io"
