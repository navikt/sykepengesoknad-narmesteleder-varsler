server:
  port: 8080

spring:
  main.banner-mode: 'off'
  profiles:
    active: default
  flyway:
    enabled: true
  datasource:
    url: "jdbc:postgresql://${NAIS_DATABASE_SYKEPENGESOKNAD_NARMESTELEDER_VARSLER_SYKEPENGESOKNAD_NL_VARSEL_DB_HOST}:${NAIS_DATABASE_SYKEPENGESOKNAD_NARMESTELEDER_VARSLER_SYKEPENGESOKNAD_NL_VARSEL_DB_PORT}/${NAIS_DATABASE_SYKEPENGESOKNAD_NARMESTELEDER_VARSLER_SYKEPENGESOKNAD_NL_VARSEL_DB_DATABASE}"
    username: ${NAIS_DATABASE_SYKEPENGESOKNAD_NARMESTELEDER_VARSLER_SYKEPENGESOKNAD_NL_VARSEL_DB_USERNAME}
    password: ${NAIS_DATABASE_SYKEPENGESOKNAD_NARMESTELEDER_VARSLER_SYKEPENGESOKNAD_NL_VARSEL_DB_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 3

aiven-kafka:
  auto-offset-reset: none
  security-protocol: SSL

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: health,prometheus
    path-mapping.prometheus: /prometheus

logging.config: "classpath:logback.xml"

no.nav.security.jwt:
  client:
    registration:
      pdl-api-client-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${PDL_API_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic


